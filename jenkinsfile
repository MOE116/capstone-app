pipeline {
    agent any

    environment {
        REGISTRY = "ekdayodemo"
        APP_NAME = "hello-world-app"
        IMAGE_TAG = "${BUILD_NUMBER}" // you could switch to GIT_COMMIT.take(7) for traceability
        DOCKER_CRED = "dockerhub-cred" // Jenkins credential ID for DockerHub
        AWS_REGION = "us-east-1"
        CLUSTER_NAME = "devops-cluster"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/MOE116/capstone-app.git'
            }
        }

        stage('Test') {
            steps {
                sh 'npm install'
                sh 'npm test || true' // ignore if no tests yet
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${REGISTRY}/${APP_NAME}:${IMAGE_TAG}", "-f docker/Dockerfile .")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CRED}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker push ${REGISTRY}/${APP_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                sh """
                  # Update kubeconfig for Jenkins EC2 IAM role
                  aws eks update-kubeconfig --region ${AWS_REGION} --name ${CLUSTER_NAME}

                  # Apply manifests to ensure namespace/configmap/secret/service/deployment exist
                  kubectl apply -f k8s/ -n microservices

                  # Update the deployment image with the new tag
                  kubectl set image deployment/hello-world-deployment \
                    hello-world-container=${REGISTRY}/${APP_NAME}:${IMAGE_TAG} \
                    -n microservices

                  # Wait for rollout success or fail
                  kubectl rollout status deployment/hello-world-deployment -n microservices
                """
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful! Version: ${IMAGE_TAG}"
        }
        failure {
            echo "❌ Pipeline failed. Check Jenkins logs."
            sh "kubectl rollout undo deployment/hello-world-deployment -n microservices || true"
        }
    }
}
